# ============================================================================
# NETLIFY CONFIGURATION
# ============================================================================

[build]
  command = "npm install -g pnpm@8 && pnpm install --frozen-lockfile && pnpm build"
  publish = ".next"
  
[build.environment]
  NODE_VERSION = "18"
  NPM_FLAGS = "--version" # Prevent npm auto-install
  # Enable Next.js standalone output for better performance
  NEXT_PRIVATE_STANDALONE = "true"

# ============================================================================
# REDIRECTS AND REWRITES
# ============================================================================

# API routes to Netlify Functions
[[redirects]]
  from = "/api/*"
  to = "/.netlify/functions/:splat"
  status = 200

# Health check endpoint
[[redirects]]
  from = "/health"
  to = "/.netlify/functions/health"
  status = 200

# SPA fallback for client-side routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Role = ["admin"]}

# Security redirects
[[redirects]]
  from = "http://fitness-tracking-app.netlify.app/*"
  to = "https://fitness-tracking-app.netlify.app/:splat"
  status = 301
  force = true

# ============================================================================
# HEADERS FOR SECURITY AND PERFORMANCE
# ============================================================================

[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"
    
    # Content Security Policy
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      font-src 'self' https://fonts.gstatic.com;
      img-src 'self' data: https:;
      connect-src 'self' https://*.supabase.co wss://*.supabase.co;
      frame-ancestors 'none';
    """
    
    # Performance headers
    Cache-Control = "public, max-age=31536000, immutable"

# Static assets caching
[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/_next/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# HTML files - shorter cache
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600"

# API responses - no cache
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# ============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATIONS
# ============================================================================

# Production environment
[context.production]
  command = "npm install -g pnpm@8 && pnpm install --frozen-lockfile && pnpm build"
  
[context.production.environment]
  NODE_ENV = "production"
  NEXT_PUBLIC_APP_ENV = "production"
  # Production Supabase credentials will be set via Netlify UI

# Staging environment (deploy-preview)
[context.deploy-preview]
  command = "npm install -g pnpm@8 && pnpm install --frozen-lockfile && pnpm build"
  
[context.deploy-preview.environment]
  NODE_ENV = "production"
  NEXT_PUBLIC_APP_ENV = "staging"
  # Staging Supabase credentials will be set via Netlify UI

# Branch deploys (develop branch)
[context.branch-deploy]
  command = "npm install -g pnpm@8 && pnpm install --frozen-lockfile && pnpm build"
  
[context.branch-deploy.environment]
  NODE_ENV = "production"
  NEXT_PUBLIC_APP_ENV = "development"

# ============================================================================
# FUNCTIONS CONFIGURATION
# ============================================================================

[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# ============================================================================
# PLUGINS
# ============================================================================

[[plugins]]
  package = "@netlify/plugin-nextjs"

[[plugins]]
  package = "netlify-plugin-lighthouse"
  
  [plugins.inputs]
    performance_budget = 90
    accessibility_budget = 95
    best_practices_budget = 90
    seo_budget = 90

# Essential files plugin for better caching
[[plugins]]
  package = "netlify-plugin-cache-nextjs"

# ============================================================================
# EDGE FUNCTIONS (if needed)
# ============================================================================

# [[edge_functions]]
#   function = "auth-middleware"
#   path = "/dashboard/*"

# ============================================================================
# SPLIT TESTING (if needed)
# ============================================================================

# [[split_tests]]
#   path = "/"
#   branches = [
#     { branch = "main", percentage = 90 },
#     { branch = "feature/new-ui", percentage = 10 }
#   ]
